{"ast":null,"code":"var _jsxFileName = \"/Users/arielrezin/CSprojects/reactAPIproject/src/Map.js\";\n//map layout\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport './index.css'; // my key 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n\nconst mapStyles = {\n  width: '67.2%',\n  height: '97.8%'\n};\n\nclass MapContainer extends Component {\n  constructor(_props) {\n    super(_props);\n    this.state = {\n      center: {\n        latitude: 44.0377,\n        longitude: -90.5477\n      },\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n      //places: [{latitude: 47.9, longitude: -122.14}] (an array of locations)\n\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      center: [{\n        latitude: 44.0377,\n        longitude: -90.5477\n      }],\n      places: [{\n        latitude: 47.9,\n        longitude: -122.14\n      }]\n    };\n  }\n\n  // displayMarkers = () => {\n  //   return this.state.places.map((store, index) => {\n  //     return <Marker key={index} id={index} position={{\n  //      lat: store.latitude,\n  //      lng: store.longitude\n  //    }}\n  //    onClick={() => console.log(\"You clicked me!\")} />\n  //   })\n  // }\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(pos => {\n      const coords = pos.coords;\n      this.setState({\n        center: {\n          lat: coords.latitude,\n          lng: coords.longitude\n        }\n      });\n    }, error => console.log(error));\n  }\n\n  render() {\n    return (// you must set the container height explicitly\n      React.createElement(\"div\", {\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        center: this.state.center,\n        style: mapStyles,\n        zoom: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'Where am I?',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"// \", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"//   \", React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.selectedPlace.name), \"// \"))))\n    );\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n})(MapContainer);","map":{"version":3,"sources":["/Users/arielrezin/CSprojects/reactAPIproject/src/Map.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","InfoWindow","mapStyles","width","height","MapContainer","constructor","props","state","center","latitude","longitude","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","setState","onClose","places","componentDidMount","navigator","geolocation","getCurrentPosition","pos","coords","lat","lng","error","console","log","render","google","name","apiKey"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,EAAwCC,UAAxC,QAA0D,mBAA1D;AACA,OAAO,aAAP,C,CACA;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,OADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;;AAKA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AASnCS,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN;AADiB,SARnBC,KAQmB,GARX;AACNC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAE,OAAX;AAAoBC,QAAAA,SAAS,EAAE,CAAC;AAAhC,OADF;AAENC,MAAAA,iBAAiB,EAAE,KAFb;AAEqB;AAC3BC,MAAAA,YAAY,EAAE,EAHR;AAGqB;AAC3BC,MAAAA,aAAa,EAAE,EAJT,CAIqB;AAC3B;;AALM,KAQW;;AAAA,SAQnBC,aARmB,GAQH,CAACR,KAAD,EAAQS,MAAR,EAAgBC,CAAhB,KAChB,KAAKC,QAAL,CAAc;AACZJ,MAAAA,aAAa,EAAEP,KADH;AAEZM,MAAAA,YAAY,EAAEG,MAFF;AAGZJ,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CATmB;;AAAA,SAenBO,OAfmB,GAeTZ,KAAK,IAAI;AACjB,UAAI,KAAKC,KAAL,CAAWI,iBAAf,EAAkC;AAChC,aAAKM,QAAL,CAAc;AACZN,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAtBkB;;AAEf,SAAKL,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CAAC;AAACC,QAAAA,QAAQ,EAAE,OAAX;AAAoBC,QAAAA,SAAS,EAAE,CAAC;AAAhC,OAAD,CADG;AAEXS,MAAAA,MAAM,EAAE,CAAC;AAACV,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,SAAS,EAAE,CAAC;AAA7B,OAAD;AAFG,KAAb;AAIH;;AAkBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAU,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACEC,GAAG,IAAI;AACL,YAAMC,MAAM,GAAGD,GAAG,CAACC,MAAnB;AACA,WAAKR,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAE;AACNkB,UAAAA,GAAG,EAAED,MAAM,CAAChB,QADN;AAENkB,UAAAA,GAAG,EAAEF,MAAM,CAACf;AAFN;AADI,OAAd;AAMD,KATH,EAUEkB,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVX;AAYD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AACA;AAAK,QAAA,KAAK,EAAE;AAAE5B,UAAAA,MAAM,EAAE,MAAV;AAAkBD,UAAAA,KAAK,EAAE;AAAzB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AACE,QAAA,MAAM,EAAE,KAAKI,KAAL,CAAW0B,MADrB;AAEE,QAAA,MAAM,EAAE,KAAKzB,KAAL,CAAWC,MAFrB;AAGE,QAAA,KAAK,EAAEP,SAHT;AAIE,QAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKa,aADhB;AAEE,QAAA,IAAI,EAAE,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAUE,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWK,YADrB;AAEE,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWI,iBAFtB;AAGE,QAAA,OAAO,EAAE,KAAKO,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKX,KAAL,CAAWM,aAAX,CAAyBoB,IAA9B,CADF,QALL,CAVF,CADF;AAFF;AAyBD;;AApFkC;;AAuFrC,eAAenC,gBAAgB,CAAC;AAC9BoC,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZ9B,YAFY,CAAf","sourcesContent":["//map layout\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport './index.css';\n// my key 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n\nconst mapStyles = {\n  width: '67.2%',\n  height: '97.8%'\n};\n\nclass MapContainer extends Component {\n  state = {\n    center: {latitude: 44.0377, longitude: -90.5477},\n    showingInfoWindow: false,  //Hides or the shows the infoWindow\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n    //places: [{latitude: 47.9, longitude: -122.14}] (an array of locations)\n  };\n\n  constructor(props) {\n    super(props);\n      this.state = {\n        center: [{latitude: 44.0377, longitude: -90.5477}],\n        places: [{latitude: 47.9, longitude: -122.14}]\n      };\n  }\n\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  // displayMarkers = () => {\n  //   return this.state.places.map((store, index) => {\n  //     return <Marker key={index} id={index} position={{\n  //      lat: store.latitude,\n  //      lng: store.longitude\n  //    }}\n  //    onClick={() => console.log(\"You clicked me!\")} />\n  //   })\n  // }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      pos => {\n        const coords = pos.coords;\n        this.setState({\n          center: {\n            lat: coords.latitude,\n            lng: coords.longitude\n          }\n        });\n      },\n      error => console.log(error)\n    );\n  }\n\n  render() {\n    return (\n      // you must set the container height explicitly\n      <div style={{ height: '100%', width: '100%' }}>\n        <Map\n          google={this.props.google}\n          center={this.state.center}\n          style={mapStyles}\n          zoom={14}\n        >\n          <Marker\n            onClick={this.onMarkerClick}\n            name={'Where am I?'}\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            // <div>\n            //   <h4>{this.state.selectedPlace.name}</h4>\n            // </div>\n          </InfoWindow>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}