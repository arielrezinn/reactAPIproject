{"ast":null,"code":"var _jsxFileName = \"/Users/arielrezin/CSprojects/reactAPIproject/src/MapContainer.js\";\n//map layout\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport axios from 'axios';\nimport './index.css'; // my maps api key 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n\nconst mapStyles = {\n  width: '68.7%',\n  height: '97.2%'\n};\n\nclass MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {},\n      //Shows the infoWindow to the selected place upon a marker\n      places: null,\n      center: {\n        lat: null,\n        lng: null\n      }\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.places.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);\n  //     this.state = {\n  //       center: [{latitude: 44.0377, longitude: -90.5477}],\n  //       places: [{latitude: 47.9, longitude: -122.14}]\n  //     };\n  // }\n  getPlaces(searchterm) {\n    let config = {\n      headers: {\n        \"Authorization\": 'TQl-ldodqDuIn-Wi3xJ5xkB-nsuPgeUvlti5NCOhIJPKTssK0BA5EjYWnwasmMSca20hq1UxyNSYPLL1c1URFMrztx4w9VfRXcOiP8f0XlWgSxZMRvIKQYlO6htPXnYx'\n      },\n      params: {\n        term: 'ice cream',\n        latitude: 43.071,\n        longitude: -89.398,\n        radius: 10000\n      },\n      responseType: 'json'\n    };\n\n    const yelp = require('yelp-fusion');\n\n    const apiKey = 'TQl-ldodqDuIn-Wi3xJ5xkB-nsuPgeUvlti5NCOhIJPKTssK0BA5EjYWnwasmMSca20hq1UxyNSYPLL1c1URFMrztx4w9VfRXcOiP8f0XlWgSxZMRvIKQYlO6htPXnYx';\n    const searchRequest = {\n      term: 'Four Barrel Coffee',\n      location: 'san francisco, ca'\n    };\n    const client = yelp.client(apiKey);\n    client.search(searchRequest).then(response => {\n      const firstResult = response.jsonBody.businesses[0];\n      const prettyJson = JSON.stringify(firstResult, null, 4);\n      console.log(prettyJson);\n    }).catch(e => {\n      console.log(e);\n    });\n    axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search', config).then(response => {\n      this.setState({\n        places: response.data\n      });\n      console.log(response);\n    }).catch(err => {\n      console.log('error');\n    });\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(pos => {\n      const coords = pos.coords;\n      this.setState({\n        center: {\n          lat: coords.latitude,\n          lng: coords.longitude\n        }\n      });\n    }, error => console.log(error));\n  }\n\n  render() {\n    this.getPlaces(this.props.craving);\n    return (// you must set the container height explicitly\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        center: this.state.center,\n        style: mapStyles,\n        zoom: 13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        id: 'user-location',\n        onClick: this.onMarkerClick,\n        name: 'You are here',\n        position: this.state.center,\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.state.selectedPlace.name)))))\n    );\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n})(MapContainer);","map":{"version":3,"sources":["/Users/arielrezin/CSprojects/reactAPIproject/src/MapContainer.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","InfoWindow","axios","mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","places","center","lat","lng","onMarkerClick","props","marker","e","setState","onClose","displayMarkers","map","store","index","latitude","longitude","console","log","getPlaces","searchterm","config","headers","params","term","radius","responseType","yelp","require","apiKey","searchRequest","location","client","search","then","response","firstResult","jsonBody","businesses","prettyJson","JSON","stringify","catch","get","data","err","componentDidMount","navigator","geolocation","getCurrentPosition","pos","coords","error","render","craving","google","name"],"mappings":"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","sourcesContent":["//map layout\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport axios from 'axios';\nimport './index.css';\n// my maps api key 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n\nconst mapStyles = {\n  width: '68.7%',\n  height: '97.2%'\n};\n\nclass MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,  //Hides or the shows the infoWindow\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {},          //Shows the infoWindow to the selected place upon a marker\n    places: null,\n    center: {lat: null, lng: null}\n  };\n\n  // constructor(props) {\n  //   super(props);\n  //     this.state = {\n  //       center: [{latitude: 44.0377, longitude: -90.5477}],\n  //       places: [{latitude: 47.9, longitude: -122.14}]\n  //     };\n  // }\n\n  getPlaces(searchterm) {\n    let config = {\n      headers: {\n        \"Authorization\":'TQl-ldodqDuIn-Wi3xJ5xkB-nsuPgeUvlti5NCOhIJPKTssK0BA5EjYWnwasmMSca20hq1UxyNSYPLL1c1URFMrztx4w9VfRXcOiP8f0XlWgSxZMRvIKQYlO6htPXnYx'},\n      params: {\n        term: 'ice cream',\n        latitude: 43.071,\n        longitude: -89.398,\n        radius: 10000\n      },\n      responseType: 'json',\n    };\n\n    const yelp = require('yelp-fusion');\n\n    const apiKey = 'TQl-ldodqDuIn-Wi3xJ5xkB-nsuPgeUvlti5NCOhIJPKTssK0BA5EjYWnwasmMSca20hq1UxyNSYPLL1c1URFMrztx4w9VfRXcOiP8f0XlWgSxZMRvIKQYlO6htPXnYx';\n\n    const searchRequest = {\n      term:'Four Barrel Coffee',\n      location: 'san francisco, ca'\n    };\n\n    const client = yelp.client(apiKey);\n\n    client.search(searchRequest).then(response => {\n      const firstResult = response.jsonBody.businesses[0];\n      const prettyJson = JSON.stringify(firstResult, null, 4);\n      console.log(prettyJson);\n    }).catch(e => {\n      console.log(e);\n    });\n\n    axios.get('https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search', config)\n      .then(response => {\n        this.setState({ places: response.data });\n        console.log(response)\n      })\n      .catch((err) => {\n        console.log('error')\n      });\n  }\n\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  displayMarkers = () => {\n    return this.state.places.map((store, index) => {\n      return <Marker key={index} id={index} position={{\n       lat: store.latitude,\n       lng: store.longitude\n     }}\n     onClick={() => console.log(\"You clicked me!\")} />\n    })\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      pos => {\n        const coords = pos.coords;\n        this.setState({\n          center: {\n            lat: coords.latitude,\n            lng: coords.longitude\n          }\n        });\n      },\n      error => console.log(error)\n    );\n  }\n\n  render() {\n    this.getPlaces(this.props.craving)\n    return (\n      // you must set the container height explicitly\n      <div>\n        <Map\n          google={this.props.google}\n          center={this.state.center}\n          style={mapStyles}\n          zoom={13}\n        >\n          <Marker\n            id={'user-location'}\n            onClick={this.onMarkerClick}\n            name={'You are here'}\n            position={this.state.center}\n            color=\"blue\"\n          />\n\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n          </InfoWindow>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}