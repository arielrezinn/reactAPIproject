{"ast":null,"code":"'use strict';\n\nconst _send = require('@tonybadguy/call-me-maybe');\n\nclass YelpClient {\n  constructor(apiKey, options) {\n    this.apiKey = apiKey;\n    this.options = {};\n\n    if (typeof options !== 'undefined') {\n      this.options = options;\n    }\n  }\n\n  send(requestOptions) {\n    const combinedOptions = Object.assign({}, requestOptions, this.options);\n    return _send(combinedOptions);\n  }\n\n  // BUSINESS ENDPOINTS\n  search(parameters) {\n    return this.send({\n      mode: 'no-cors',\n      url: 'https://api.yelp.com/v3/businesses/search',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  phoneSearch(parameters) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/businesses/search/phone',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  transactionSearch(transactionType, parameters) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/transactions/{transaction_type}/search',\n      urlParams: {\n        transaction_type: transactionType\n      },\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  business(id) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/businesses/{id}',\n      urlParams: {\n        id: id\n      },\n      bearerToken: this.apiKey\n    });\n  }\n\n  reviews(businessId) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/businesses/{id}/reviews',\n      urlParams: {\n        id: businessId\n      },\n      bearerToken: this.apiKey\n    });\n  }\n\n  autocomplete(parameters) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/autocomplete',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  businessMatch(parameters) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/businesses/matches',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  } // EVENTS ENDPOINTS\n\n\n  eventLookup(eventId, parameters) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/events/{id}',\n      urlParams: {\n        id: eventId\n      },\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  eventSearch(parameters) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/events',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  featuredEvent(parameters) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/events/featured',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  } // CATEGORIES ENDPOINTS\n\n\n  allCategories() {\n    return this.send({\n      url: 'https://api.yelp.com/v3/categories',\n      bearerToken: this.apiKey\n    });\n  }\n\n  categoryDetails(alias) {\n    return this.send({\n      url: 'https://api.yelp.com/v3/categories/{alias}',\n      urlParams: {\n        alias: alias\n      },\n      bearerToken: this.apiKey\n    });\n  }\n\n}\n\nconst createClient = (apiKey, options) => {\n  return new YelpClient(apiKey, options);\n};\n\nmodule.exports = {\n  client: createClient\n};","map":{"version":3,"sources":["/Users/arielrezin/CSprojects/reactAPIproject/node_modules/yelp-fusion/lib/index.js"],"names":["_send","require","YelpClient","constructor","apiKey","options","send","requestOptions","combinedOptions","Object","assign","search","parameters","mode","url","query","bearerToken","phoneSearch","transactionSearch","transactionType","urlParams","transaction_type","business","id","reviews","businessId","autocomplete","businessMatch","eventLookup","eventId","eventSearch","featuredEvent","allCategories","categoryDetails","alias","createClient","module","exports","client"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,2BAAD,CAArB;;AAEA,MAAMC,UAAN,CAAiB;AACfC,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAiB;AAC1B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAe,EAAf;;AAEA,QAAG,OAAOA,OAAP,KAAmB,WAAtB,EAAkC;AAChC,WAAKA,OAAL,GAAeA,OAAf;AACD;AACF;;AAEDC,EAAAA,IAAI,CAACC,cAAD,EAAgB;AAClB,UAAMC,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,cAAlB,EAAkC,KAAKF,OAAvC,CAAxB;AACA,WAAOL,KAAK,CAACQ,eAAD,CAAZ;AACD;;AAED;AAEAG,EAAAA,MAAM,CAACC,UAAD,EAAY;AAChB,WAAO,KAAKN,IAAL,CAAU;AACfO,MAAAA,IAAI,EAAE,SADS;AAEfC,MAAAA,GAAG,EAAE,2CAFU;AAGfC,MAAAA,KAAK,EAAEH,UAHQ;AAIfI,MAAAA,WAAW,EAAE,KAAKZ;AAJH,KAAV,CAAP;AAMD;;AAEDa,EAAAA,WAAW,CAACL,UAAD,EAAY;AACrB,WAAO,KAAKN,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,iDADU;AAEfC,MAAAA,KAAK,EAAEH,UAFQ;AAGfI,MAAAA,WAAW,EAAE,KAAKZ;AAHH,KAAV,CAAP;AAKD;;AAEDc,EAAAA,iBAAiB,CAACC,eAAD,EAAkBP,UAAlB,EAA6B;AAC5C,WAAO,KAAKN,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,gEADU;AAEfM,MAAAA,SAAS,EAAC;AACRC,QAAAA,gBAAgB,EAAEF;AADV,OAFK;AAKfJ,MAAAA,KAAK,EAAEH,UALQ;AAMfI,MAAAA,WAAW,EAAE,KAAKZ;AANH,KAAV,CAAP;AAQD;;AAEDkB,EAAAA,QAAQ,CAACC,EAAD,EAAI;AACV,WAAO,KAAKjB,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,yCADU;AAEfM,MAAAA,SAAS,EAAC;AACRG,QAAAA,EAAE,EAAEA;AADI,OAFK;AAKfP,MAAAA,WAAW,EAAE,KAAKZ;AALH,KAAV,CAAP;AAOD;;AAEDoB,EAAAA,OAAO,CAACC,UAAD,EAAY;AACjB,WAAO,KAAKnB,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,iDADU;AAEfM,MAAAA,SAAS,EAAC;AACRG,QAAAA,EAAE,EAAEE;AADI,OAFK;AAKfT,MAAAA,WAAW,EAAE,KAAKZ;AALH,KAAV,CAAP;AAOD;;AAEDsB,EAAAA,YAAY,CAACd,UAAD,EAAY;AACtB,WAAO,KAAKN,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,sCADU;AAEfC,MAAAA,KAAK,EAAEH,UAFQ;AAGfI,MAAAA,WAAW,EAAE,KAAKZ;AAHH,KAAV,CAAP;AAKD;;AAEDuB,EAAAA,aAAa,CAACf,UAAD,EAAY;AACvB,WAAO,KAAKN,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,4CADU;AAEfC,MAAAA,KAAK,EAAEH,UAFQ;AAGfI,MAAAA,WAAW,EAAE,KAAKZ;AAHH,KAAV,CAAP;AAKD,GA/Ec,CAiFf;;;AAEAwB,EAAAA,WAAW,CAACC,OAAD,EAAUjB,UAAV,EAAqB;AAC9B,WAAO,KAAKN,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,qCADU;AAEfM,MAAAA,SAAS,EAAC;AACRG,QAAAA,EAAE,EAAEM;AADI,OAFK;AAKfd,MAAAA,KAAK,EAACH,UALS;AAMfI,MAAAA,WAAW,EAAE,KAAKZ;AANH,KAAV,CAAP;AAQD;;AAED0B,EAAAA,WAAW,CAAClB,UAAD,EAAY;AACrB,WAAO,KAAKN,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,gCADU;AAEfC,MAAAA,KAAK,EAAEH,UAFQ;AAGfI,MAAAA,WAAW,EAAE,KAAKZ;AAHH,KAAV,CAAP;AAKD;;AAED2B,EAAAA,aAAa,CAACnB,UAAD,EAAY;AACvB,WAAO,KAAKN,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,yCADU;AAEfC,MAAAA,KAAK,EAAEH,UAFQ;AAGfI,MAAAA,WAAW,EAAE,KAAKZ;AAHH,KAAV,CAAP;AAKD,GA5Gc,CA8Gf;;;AAEA4B,EAAAA,aAAa,GAAE;AACb,WAAO,KAAK1B,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,oCADU;AAEfE,MAAAA,WAAW,EAAE,KAAKZ;AAFH,KAAV,CAAP;AAID;;AAED6B,EAAAA,eAAe,CAACC,KAAD,EAAO;AACpB,WAAO,KAAK5B,IAAL,CAAU;AACfQ,MAAAA,GAAG,EAAE,4CADU;AAEfM,MAAAA,SAAS,EAAC;AACRc,QAAAA,KAAK,EAAEA;AADC,OAFK;AAKflB,MAAAA,WAAW,EAAE,KAAKZ;AALH,KAAV,CAAP;AAOD;;AA/Hc;;AAmIjB,MAAM+B,YAAY,GAAG,CAAC/B,MAAD,EAASC,OAAT,KAAqB;AACxC,SAAO,IAAIH,UAAJ,CAAeE,MAAf,EAAuBC,OAAvB,CAAP;AACD,CAFD;;AAIA+B,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,MAAM,EAAEH;AADO,CAAjB","sourcesContent":["'use strict';\n\nconst _send = require('@tonybadguy/call-me-maybe');\n\nclass YelpClient {\n  constructor(apiKey, options){\n    this.apiKey = apiKey;\n    this.options = {};\n\n    if(typeof options !== 'undefined'){\n      this.options = options;\n    }\n  }\n\n  send(requestOptions){\n    const combinedOptions = Object.assign({}, requestOptions, this.options);\n    return _send(combinedOptions);\n  };\n\n  // BUSINESS ENDPOINTS\n\n  search(parameters){\n    return this.send({\n      mode: 'no-cors',\n      url: 'https://api.yelp.com/v3/businesses/search',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  phoneSearch(parameters){\n    return this.send({\n      url: 'https://api.yelp.com/v3/businesses/search/phone',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  transactionSearch(transactionType, parameters){\n    return this.send({\n      url: 'https://api.yelp.com/v3/transactions/{transaction_type}/search',\n      urlParams:{\n        transaction_type: transactionType\n      },\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  business(id){\n    return this.send({\n      url: 'https://api.yelp.com/v3/businesses/{id}',\n      urlParams:{\n        id: id\n      },\n      bearerToken: this.apiKey\n    });\n  }\n\n  reviews(businessId){\n    return this.send({\n      url: 'https://api.yelp.com/v3/businesses/{id}/reviews',\n      urlParams:{\n        id: businessId\n      },\n      bearerToken: this.apiKey\n    });\n  }\n\n  autocomplete(parameters){\n    return this.send({\n      url: 'https://api.yelp.com/v3/autocomplete',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  businessMatch(parameters){\n    return this.send({\n      url: 'https://api.yelp.com/v3/businesses/matches',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  // EVENTS ENDPOINTS\n\n  eventLookup(eventId, parameters){\n    return this.send({\n      url: 'https://api.yelp.com/v3/events/{id}',\n      urlParams:{\n        id: eventId\n      },\n      query:parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  eventSearch(parameters){\n    return this.send({\n      url: 'https://api.yelp.com/v3/events',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  featuredEvent(parameters){\n    return this.send({\n      url: 'https://api.yelp.com/v3/events/featured',\n      query: parameters,\n      bearerToken: this.apiKey\n    });\n  }\n\n  // CATEGORIES ENDPOINTS\n\n  allCategories(){\n    return this.send({\n      url: 'https://api.yelp.com/v3/categories',\n      bearerToken: this.apiKey\n    });\n  }\n\n  categoryDetails(alias){\n    return this.send({\n      url: 'https://api.yelp.com/v3/categories/{alias}',\n      urlParams:{\n        alias: alias\n      },\n      bearerToken: this.apiKey\n    });\n  }\n\n}\n\nconst createClient = (apiKey, options) => {\n  return new YelpClient(apiKey, options);\n};\n\nmodule.exports = {\n  client: createClient\n};\n"]},"metadata":{},"sourceType":"script"}