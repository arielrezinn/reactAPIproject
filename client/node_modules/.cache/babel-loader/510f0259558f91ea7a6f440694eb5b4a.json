{"ast":null,"code":"import _classCallCheck from\"/Users/arielrezin/CSprojects/reactAPIproject/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/arielrezin/CSprojects/reactAPIproject/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/arielrezin/CSprojects/reactAPIproject/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/arielrezin/CSprojects/reactAPIproject/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/arielrezin/CSprojects/reactAPIproject/node_modules/@babel/runtime/helpers/esm/inherits\";//map layout\nimport React,{Component}from'react';import{Map,GoogleApiWrapper,Marker,InfoWindow}from'google-maps-react';import'./Locations.js';import'./index.css';// my maps api key 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\nvar mapStyles={width:'67.2%',height:'97.8%'};var MapContainer=/*#__PURE__*/function(_Component){_inherits(MapContainer,_Component);function MapContainer(){var _getPrototypeOf2;var _this;_classCallCheck(this,MapContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={showingInfoWindow:false,//Hides or the shows the infoWindow\nactiveMarker:{},//Shows the active marker upon click\nselectedPlace:{}//Shows the infoWindow to the selected place upon a marker\n};_this.onMarkerClick=function(props,marker,e){return _this.setState({selectedPlace:props,activeMarker:marker,showingInfoWindow:true});};_this.onClose=function(props){if(_this.state.showingInfoWindow){_this.setState({showingInfoWindow:false,activeMarker:null});}};return _this;}_createClass(MapContainer,[{key:\"componentDidMount\",// displayMarkers = () => {\n//   return this.state.places.map((store, index) => {\n//     return <Marker key={index} id={index} position={{\n//      lat: store.latitude,\n//      lng: store.longitude\n//    }}\n//    onClick={() => console.log(\"You clicked me!\")} />\n//   })\n// }\nvalue:function componentDidMount(){var _this2=this;navigator.geolocation.getCurrentPosition(function(pos){var coords=pos.coords;_this2.setState({center:{lat:coords.latitude,lng:coords.longitude}});},function(error){return console.log(error);});}},{key:\"render\",value:function render(){return(// you must set the container height explicitly\nReact.createElement(\"div\",{style:{height:'100%',width:'100%'}},React.createElement(Map,{google:this.props.google,center:this.state.center,style:mapStyles,zoom:14},React.createElement(Marker,{id:'user-location',onClick:this.onMarkerClick,name:'You are here',position:this.state.center,color:\"blue\"}),React.createElement(InfoWindow,{marker:this.state.activeMarker,visible:this.state.showingInfoWindow,onClose:this.onClose},React.createElement(\"div\",null,React.createElement(\"h4\",null,this.state.selectedPlace.name))))));}}]);return MapContainer;}(Component);export default GoogleApiWrapper({apiKey:'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'})(MapContainer);","map":{"version":3,"sources":["/Users/arielrezin/CSprojects/reactAPIproject/src/MapContainer.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","InfoWindow","mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","navigator","geolocation","getCurrentPosition","pos","coords","center","lat","latitude","lng","longitude","error","console","log","google","name","apiKey"],"mappings":"yoBAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,GAAT,CAAcC,gBAAd,CAAgCC,MAAhC,CAAwCC,UAAxC,KAA0D,mBAA1D,CACA,MAAO,gBAAP,CACA,MAAO,aAAP,CACA;AAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,KAAK,CAAE,OADS,CAEhBC,MAAM,CAAE,OAFQ,CAAlB,C,GAKMC,CAAAA,Y,uZACJC,K,CAAQ,CACNC,iBAAiB,CAAE,KADb,CACqB;AAC3BC,YAAY,CAAE,EAFR,CAEqB;AAC3BC,aAAa,CAAE,EAAY;AAHrB,C,OAcRC,a,CAAgB,SAACC,KAAD,CAAQC,MAAR,CAAgBC,CAAhB,QAChB,OAAKC,QAAL,CAAc,CACZL,aAAa,CAAEE,KADH,CAEZH,YAAY,CAAEI,MAFF,CAGZL,iBAAiB,CAAE,IAHP,CAAd,CADgB,E,OAOhBQ,O,CAAU,SAAAJ,KAAK,CAAI,CACjB,GAAI,MAAKL,KAAL,CAAWC,iBAAf,CAAkC,CAChC,MAAKO,QAAL,CAAc,CACZP,iBAAiB,CAAE,KADP,CAEZC,YAAY,CAAE,IAFF,CAAd,EAID,CACF,C,mEAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;kCAEoB,iBAClBQ,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACE,SAAAC,GAAG,CAAI,CACL,GAAMC,CAAAA,MAAM,CAAGD,GAAG,CAACC,MAAnB,CACA,MAAI,CAACN,QAAL,CAAc,CACZO,MAAM,CAAE,CACNC,GAAG,CAAEF,MAAM,CAACG,QADN,CAENC,GAAG,CAAEJ,MAAM,CAACK,SAFN,CADI,CAAd,EAMD,CATH,CAUE,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ,EAVP,EAYD,C,uCAEQ,CACP,MACE;AACA,2BAAK,KAAK,CAAE,CAAEtB,MAAM,CAAE,MAAV,CAAkBD,KAAK,CAAE,MAAzB,CAAZ,EACE,oBAAC,GAAD,EACE,MAAM,CAAE,KAAKQ,KAAL,CAAWkB,MADrB,CAEE,MAAM,CAAE,KAAKvB,KAAL,CAAWe,MAFrB,CAGE,KAAK,CAAEnB,SAHT,CAIE,IAAI,CAAE,EAJR,EAME,oBAAC,MAAD,EACE,EAAE,CAAE,eADN,CAEE,OAAO,CAAE,KAAKQ,aAFhB,CAGE,IAAI,CAAE,cAHR,CAIE,QAAQ,CAAE,KAAKJ,KAAL,CAAWe,MAJvB,CAKE,KAAK,CAAC,MALR,EANF,CAaE,oBAAC,UAAD,EACE,MAAM,CAAE,KAAKf,KAAL,CAAWE,YADrB,CAEE,OAAO,CAAE,KAAKF,KAAL,CAAWC,iBAFtB,CAGE,OAAO,CAAE,KAAKQ,OAHhB,EAKA,+BACE,8BAAK,KAAKT,KAAL,CAAWG,aAAX,CAAyBqB,IAA9B,CADF,CALA,CAbF,CADF,CAFF,EA4BD,C,0BArFwBjC,S,EAwF3B,cAAeE,CAAAA,gBAAgB,CAAC,CAC9BgC,MAAM,CAAE,yCADsB,CAAD,CAAhB,CAEZ1B,YAFY,CAAf","sourcesContent":["//map layout\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport './Locations.js';\nimport './index.css';\n// my maps api key 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n\nconst mapStyles = {\n  width: '67.2%',\n  height: '97.8%'\n};\n\nclass MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,  //Hides or the shows the infoWindow\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n\n  // constructor(props) {\n  //   super(props);\n  //     this.state = {\n  //       center: [{latitude: 44.0377, longitude: -90.5477}],\n  //       places: [{latitude: 47.9, longitude: -122.14}]\n  //     };\n  // }\n\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  // displayMarkers = () => {\n  //   return this.state.places.map((store, index) => {\n  //     return <Marker key={index} id={index} position={{\n  //      lat: store.latitude,\n  //      lng: store.longitude\n  //    }}\n  //    onClick={() => console.log(\"You clicked me!\")} />\n  //   })\n  // }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      pos => {\n        const coords = pos.coords;\n        this.setState({\n          center: {\n            lat: coords.latitude,\n            lng: coords.longitude\n          }\n        });\n      },\n      error => console.log(error)\n    );\n  }\n\n  render() {\n    return (\n      // you must set the container height explicitly\n      <div style={{ height: '100%', width: '100%' }}>\n        <Map\n          google={this.props.google}\n          center={this.state.center}\n          style={mapStyles}\n          zoom={14}\n        >\n          <Marker\n            id={'user-location'}\n            onClick={this.onMarkerClick}\n            name={'You are here'}\n            position={this.state.center}\n            color=\"blue\"\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n          </InfoWindow>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}