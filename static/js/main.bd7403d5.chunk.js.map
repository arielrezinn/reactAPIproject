{"version":3,"sources":["MapContainer.js","Options.js","Layout.js","index.js"],"names":["mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","navigator","geolocation","getCurrentPosition","pos","coords","center","lat","latitude","lng","longitude","error","console","log","style","google","this","zoom","id","onClick","name","position","color","visible","Component","GoogleApiWrapper","apiKey","Layout","className","Options","ReactDOM","render","document","getElementById"],"mappings":"gRAOMA,G,MAAY,CAChBC,MAAO,QACPC,OAAQ,UAGJC,E,2MACJC,MAAQ,CACNC,mBAAmB,EACnBC,aAAc,GACdC,cAAe,I,EAWjBC,cAAgB,SAACC,EAAOC,EAAQC,GAAhB,OAChB,EAAKC,SAAS,CACZL,cAAeE,EACfH,aAAcI,EACdL,mBAAmB,K,EAGrBQ,QAAU,SAAAJ,GACJ,EAAKL,MAAMC,mBACb,EAAKO,SAAS,CACZP,mBAAmB,EACnBC,aAAc,Q,mFAeC,IAAD,OAClBQ,UAAUC,YAAYC,oBACpB,SAAAC,GACE,IAAMC,EAASD,EAAIC,OACnB,EAAKN,SAAS,CACZO,OAAQ,CACNC,IAAKF,EAAOG,SACZC,IAAKJ,EAAOK,gBAIlB,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,+BAKvB,OAEE,yBAAKG,MAAO,CAAEzB,OAAQ,OAAQD,MAAO,SACnC,kBAAC,MAAD,CACE2B,OAAQC,KAAKpB,MAAMmB,OACnBT,OAAQU,KAAKzB,MAAMe,OACnBQ,MAAO3B,EACP8B,KAAM,IAEN,kBAAC,SAAD,CACEC,GAAI,gBACJC,QAASH,KAAKrB,cACdyB,KAAM,eACNC,SAAUL,KAAKzB,MAAMe,OACrBgB,MAAM,SAER,kBAAC,aAAD,CACEzB,OAAQmB,KAAKzB,MAAME,aACnB8B,QAASP,KAAKzB,MAAMC,kBACpBQ,QAASgB,KAAKhB,SAEhB,6BACE,4BAAKgB,KAAKzB,MAAMG,cAAc0B,c,GA/EfI,aAwFZC,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZnC,GCnFYqC,E,iLATX,OACE,6BACE,yBAAKC,UAAU,UAHN,8B,GAHIJ,a,QCqBNG,E,iLAhBX,OACI,kBAAC,MAAD,KACE,kBAAC,SAAD,CACEC,UAAU,WACV,kBAACC,EAAD,OAEF,kBAAC,SAAD,CACED,UAAU,OACV,kBAAC,EAAD,Y,GAXSJ,aCCrBM,IAASC,OACP,kBAAC,EAAD,CAAQH,UAAU,WAClBI,SAASC,eAAe,W","file":"static/js/main.bd7403d5.chunk.js","sourcesContent":["//map layout\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport './Locations.js';\nimport './index.css';\n// my maps api key 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n\nconst mapStyles = {\n  width: '67.2%',\n  height: '97.8%'\n};\n\nclass MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,  //Hides or the shows the infoWindow\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n\n  // constructor(props) {\n  //   super(props);\n  //     this.state = {\n  //       center: [{latitude: 44.0377, longitude: -90.5477}],\n  //       places: [{latitude: 47.9, longitude: -122.14}]\n  //     };\n  // }\n\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  // displayMarkers = () => {\n  //   return this.state.places.map((store, index) => {\n  //     return <Marker key={index} id={index} position={{\n  //      lat: store.latitude,\n  //      lng: store.longitude\n  //    }}\n  //    onClick={() => console.log(\"You clicked me!\")} />\n  //   })\n  // }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      pos => {\n        const coords = pos.coords;\n        this.setState({\n          center: {\n            lat: coords.latitude,\n            lng: coords.longitude\n          }\n        });\n      },\n      error => console.log(error)\n    );\n  }\n\n  render() {\n    return (\n      // you must set the container height explicitly\n      <div style={{ height: '100%', width: '100%' }}>\n        <Map\n          google={this.props.google}\n          center={this.state.center}\n          style={mapStyles}\n          zoom={14}\n        >\n          <Marker\n            id={'user-location'}\n            onClick={this.onMarkerClick}\n            name={'You are here'}\n            position={this.state.center}\n            color=\"blue\"\n          />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n          </InfoWindow>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC-FNgVzK38CFoYC6E4-olIUu418f90H2I'\n})(MapContainer);\n","//options class\nimport React, { Component } from 'react';\n//import ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass Layout extends Component {\n\n  render() {\n    let prompt = 'What are you craving?'\n    return (\n      <div>\n        <div className=\"prompt\">{prompt}</div>\n      </div>\n\n    );\n  }\n}\n\nexport default Layout;\n","import React, { Component } from \"react\";\n//import ReactDOM from 'react-dom';\nimport MapContainer from './MapContainer'\nimport Options from './Options'\nimport './index.css';\n\nimport { Column, Row } from \"simple-flexbox\";\n\nclass Layout extends Component {\n\n  render() {\n    return (\n        <Row>\n          <Column\n            className=\"options\">\n            <Options></Options>\n          </Column>\n          <Column\n            className=\"map\">\n            <MapContainer></MapContainer>\n          </Column>\n        </Row>\n    );\n  }\n}\n\n\nexport default Layout\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Layout from './Layout'\n\n\n\n// ========================================\n\nReactDOM.render(\n  <Layout className=\"layout\"/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}